import os
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import roc_curve, auc
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Setting up data paths
base_dir = 'C:/'
test_dir = os.path.join(base_dir, 'test')

# Importing Saved Models
model_path = "2.CNN_U87_10h_2.28"
Cancer_Classification_Model = load_model(model_path)

# Data preprocessing
test_datagen = ImageDataGenerator(rescale=1. / 255)

test_generator = test_datagen.flow_from_directory(
    test_dir,
    target_size=(320, 240),
    batch_size=8,
    class_mode='categorical',
    shuffle=False
)

# Checking the class index
class_indices = test_generator.class_indices
print(class_indices)

# Name the class directly
class_names = ['Lipo', 'Mock', 'Scramble', 'Transfection']

# Performing forecasts
y_pred_prob = Cancer_Classification_Model.predict(test_generator)
y_test = test_generator.classes
num_classes = len(class_indices)

# One-hot encoding
y_test_bin = np.eye(num_classes)[y_test]

# Calculate ROC curves and AUC
fpr = dict()
tpr = dict()
roc_auc = dict()
for i in range(num_classes):
    fpr[i], tpr[i], _ = roc_curve(y_test_bin[:, i], y_pred_prob[:, i])
    roc_auc[i] = auc(fpr[i], tpr[i])

# Setting up styles
plt.style.use('ggplot')  # 유효한 스타일로 설정

# Drawing ROC curves
plt.figure(figsize=(10, 8))
colors = ['blue', 'orange', 'green', 'red']
for i in range(num_classes):
    plt.plot(fpr[i], tpr[i], color=colors[i % len(colors)], lw=2, label=f'{class_names[i]} (area = {roc_auc[i]:0.2f})')

plt.plot([0, 1], [0, 1], 'k--', lw=2)
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate', fontsize=14)
plt.ylabel('True Positive Rate', fontsize=14)
plt.title('Receiver Operating Characteristic', fontsize=16)
plt.legend(loc='lower right', fontsize=12)
plt.grid(True)
plt.show()
